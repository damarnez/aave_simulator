/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface LendingPoolParametersProviderInterface
  extends ethers.utils.Interface {
  functions: {
    "initialize(address)": FunctionFragment;
    "getMaxStableRateBorrowSizePercent()": FunctionFragment;
    "getRebalanceDownRateDelta()": FunctionFragment;
    "getFlashLoanFeesInBips()": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "initialize", values: [string]): string;
  encodeFunctionData(
    functionFragment: "getMaxStableRateBorrowSizePercent",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getRebalanceDownRateDelta",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getFlashLoanFeesInBips",
    values?: undefined
  ): string;

  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getMaxStableRateBorrowSizePercent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRebalanceDownRateDelta",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFlashLoanFeesInBips",
    data: BytesLike
  ): Result;

  events: {};
}

export class LendingPoolParametersProvider extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: LendingPoolParametersProviderInterface;

  functions: {
    /**
     * initializes the LendingPoolParametersProvider after it's added to the proxy
     * @param _addressesProvider the address of the LendingPoolAddressesProvider
     */
    initialize(
      _addressesProvider: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    /**
     * initializes the LendingPoolParametersProvider after it's added to the proxy
     * @param _addressesProvider the address of the LendingPoolAddressesProvider
     */
    "initialize(address)"(
      _addressesProvider: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    /**
     * returns the maximum stable rate borrow size, in percentage of the available liquidity.*
     */
    getMaxStableRateBorrowSizePercent(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    /**
     * returns the maximum stable rate borrow size, in percentage of the available liquidity.*
     */
    "getMaxStableRateBorrowSizePercent()"(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    /**
     * returns the delta between the current stable rate and the user stable rate at     which the borrow position of the user will be rebalanced (scaled down)*
     */
    getRebalanceDownRateDelta(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    /**
     * returns the delta between the current stable rate and the user stable rate at     which the borrow position of the user will be rebalanced (scaled down)*
     */
    "getRebalanceDownRateDelta()"(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    /**
     * returns the fee applied to a flashloan and the portion to redirect to the protocol, in basis points.*
     */
    getFlashLoanFeesInBips(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
    }>;

    /**
     * returns the fee applied to a flashloan and the portion to redirect to the protocol, in basis points.*
     */
    "getFlashLoanFeesInBips()"(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
    }>;
  };

  /**
   * initializes the LendingPoolParametersProvider after it's added to the proxy
   * @param _addressesProvider the address of the LendingPoolAddressesProvider
   */
  initialize(
    _addressesProvider: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  /**
   * initializes the LendingPoolParametersProvider after it's added to the proxy
   * @param _addressesProvider the address of the LendingPoolAddressesProvider
   */
  "initialize(address)"(
    _addressesProvider: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  /**
   * returns the maximum stable rate borrow size, in percentage of the available liquidity.*
   */
  getMaxStableRateBorrowSizePercent(
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  /**
   * returns the maximum stable rate borrow size, in percentage of the available liquidity.*
   */
  "getMaxStableRateBorrowSizePercent()"(
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  /**
   * returns the delta between the current stable rate and the user stable rate at     which the borrow position of the user will be rebalanced (scaled down)*
   */
  getRebalanceDownRateDelta(overrides?: CallOverrides): Promise<BigNumber>;

  /**
   * returns the delta between the current stable rate and the user stable rate at     which the borrow position of the user will be rebalanced (scaled down)*
   */
  "getRebalanceDownRateDelta()"(overrides?: CallOverrides): Promise<BigNumber>;

  /**
   * returns the fee applied to a flashloan and the portion to redirect to the protocol, in basis points.*
   */
  getFlashLoanFeesInBips(
    overrides?: CallOverrides
  ): Promise<{
    0: BigNumber;
    1: BigNumber;
  }>;

  /**
   * returns the fee applied to a flashloan and the portion to redirect to the protocol, in basis points.*
   */
  "getFlashLoanFeesInBips()"(
    overrides?: CallOverrides
  ): Promise<{
    0: BigNumber;
    1: BigNumber;
  }>;

  callStatic: {
    /**
     * initializes the LendingPoolParametersProvider after it's added to the proxy
     * @param _addressesProvider the address of the LendingPoolAddressesProvider
     */
    initialize(
      _addressesProvider: string,
      overrides?: CallOverrides
    ): Promise<void>;

    /**
     * initializes the LendingPoolParametersProvider after it's added to the proxy
     * @param _addressesProvider the address of the LendingPoolAddressesProvider
     */
    "initialize(address)"(
      _addressesProvider: string,
      overrides?: CallOverrides
    ): Promise<void>;

    /**
     * returns the maximum stable rate borrow size, in percentage of the available liquidity.*
     */
    getMaxStableRateBorrowSizePercent(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    /**
     * returns the maximum stable rate borrow size, in percentage of the available liquidity.*
     */
    "getMaxStableRateBorrowSizePercent()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    /**
     * returns the delta between the current stable rate and the user stable rate at     which the borrow position of the user will be rebalanced (scaled down)*
     */
    getRebalanceDownRateDelta(overrides?: CallOverrides): Promise<BigNumber>;

    /**
     * returns the delta between the current stable rate and the user stable rate at     which the borrow position of the user will be rebalanced (scaled down)*
     */
    "getRebalanceDownRateDelta()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    /**
     * returns the fee applied to a flashloan and the portion to redirect to the protocol, in basis points.*
     */
    getFlashLoanFeesInBips(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
    }>;

    /**
     * returns the fee applied to a flashloan and the portion to redirect to the protocol, in basis points.*
     */
    "getFlashLoanFeesInBips()"(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
    }>;
  };

  filters: {};

  estimateGas: {
    /**
     * initializes the LendingPoolParametersProvider after it's added to the proxy
     * @param _addressesProvider the address of the LendingPoolAddressesProvider
     */
    initialize(
      _addressesProvider: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    /**
     * initializes the LendingPoolParametersProvider after it's added to the proxy
     * @param _addressesProvider the address of the LendingPoolAddressesProvider
     */
    "initialize(address)"(
      _addressesProvider: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    /**
     * returns the maximum stable rate borrow size, in percentage of the available liquidity.*
     */
    getMaxStableRateBorrowSizePercent(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    /**
     * returns the maximum stable rate borrow size, in percentage of the available liquidity.*
     */
    "getMaxStableRateBorrowSizePercent()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    /**
     * returns the delta between the current stable rate and the user stable rate at     which the borrow position of the user will be rebalanced (scaled down)*
     */
    getRebalanceDownRateDelta(overrides?: CallOverrides): Promise<BigNumber>;

    /**
     * returns the delta between the current stable rate and the user stable rate at     which the borrow position of the user will be rebalanced (scaled down)*
     */
    "getRebalanceDownRateDelta()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    /**
     * returns the fee applied to a flashloan and the portion to redirect to the protocol, in basis points.*
     */
    getFlashLoanFeesInBips(overrides?: CallOverrides): Promise<BigNumber>;

    /**
     * returns the fee applied to a flashloan and the portion to redirect to the protocol, in basis points.*
     */
    "getFlashLoanFeesInBips()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    /**
     * initializes the LendingPoolParametersProvider after it's added to the proxy
     * @param _addressesProvider the address of the LendingPoolAddressesProvider
     */
    initialize(
      _addressesProvider: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    /**
     * initializes the LendingPoolParametersProvider after it's added to the proxy
     * @param _addressesProvider the address of the LendingPoolAddressesProvider
     */
    "initialize(address)"(
      _addressesProvider: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    /**
     * returns the maximum stable rate borrow size, in percentage of the available liquidity.*
     */
    getMaxStableRateBorrowSizePercent(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    /**
     * returns the maximum stable rate borrow size, in percentage of the available liquidity.*
     */
    "getMaxStableRateBorrowSizePercent()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    /**
     * returns the delta between the current stable rate and the user stable rate at     which the borrow position of the user will be rebalanced (scaled down)*
     */
    getRebalanceDownRateDelta(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    /**
     * returns the delta between the current stable rate and the user stable rate at     which the borrow position of the user will be rebalanced (scaled down)*
     */
    "getRebalanceDownRateDelta()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    /**
     * returns the fee applied to a flashloan and the portion to redirect to the protocol, in basis points.*
     */
    getFlashLoanFeesInBips(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    /**
     * returns the fee applied to a flashloan and the portion to redirect to the protocol, in basis points.*
     */
    "getFlashLoanFeesInBips()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
