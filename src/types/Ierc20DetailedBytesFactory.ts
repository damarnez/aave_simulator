/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import { Ierc20DetailedBytes } from "./Ierc20DetailedBytes";

export class Ierc20DetailedBytesFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<Ierc20DetailedBytes> {
    return super.deploy(overrides || {}) as Promise<Ierc20DetailedBytes>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Ierc20DetailedBytes {
    return super.attach(address) as Ierc20DetailedBytes;
  }
  connect(signer: Signer): Ierc20DetailedBytesFactory {
    return super.connect(signer) as Ierc20DetailedBytesFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Ierc20DetailedBytes {
    return new Contract(address, _abi, signerOrProvider) as Ierc20DetailedBytes;
  }
}

const _abi = [
  {
    constant: true,
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060ac8061001f6000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c806306fdde03146041578063313ce56714605957806395d89b4114605f575b600080fd5b60476065565b60408051918252519081900360200190f35b6047606b565b60476071565b60005481565b60025481565b6001548156fea265627a7a72315820de7625dd554406d074323103c69c96b990b259410cb4ec86eb2b359f2ae3c7f564736f6c634300050e0032";
